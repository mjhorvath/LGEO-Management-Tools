/*******************************************************************************/
/*                                                                             */
/* LGEO Libray Include File     (C) lgeo@digitalbricks.org (Lutz Uhlmann)      */
/*                                                                             */
/* lg_61068: Slope Brick Curved 2 x 4 without Underside Studs                  */
/*                                                                             */
/* This file is in no way related to the LEGO(tm) Group.                       */
/* It is provided for private non-commercial use only.                         */
/*                                                                             */ 
/* 20120811 Owen Burgoyne                                                      */
/*                                                                             */
/*******************************************************************************/
#ifdef(lg_61068)
#else
#declare LENGTH = 2;
#declare WIDTH = 4;
#declare HEIGHT = 2; // Height in plates
#declare CURVE = 3.2315;
#declare lg_angle1=65.32484819;
#declare lg_angle2=90-lg_angle1;
#declare lg_61068 = 
union {
 // EDGES
 sphere {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, (HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE)>,
  LG_CORNER_SPACE
 }
 sphere {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE, (HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE)>,
  LG_CORNER_SPACE
 }
 cylinder {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE, (HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE)>,
  <LG_CORNER_SPACE, LG_CORNER_SPACE, (HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE)>,
  LG_CORNER_SPACE 
 }
 sphere {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 sphere {
  <(WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE), LG_CORNER_SPACE, LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <(WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE), LG_CORNER_SPACE, LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  LG_CORNER_SPACE 
 }
 cylinder {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <LG_CORNER_SPACE, LG_CORNER_SPACE, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 sphere {
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>, LG_CORNER_SPACE
 }
 sphere {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
cylinder {
  <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 sphere {
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  LG_CORNER_SPACE
 }
 sphere {
  <(WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>, LG_CORNER_SPACE
 }
 cylinder {
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE 
 }
 cylinder {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  LG_CORNER_SPACE
 }
  intersection {
    merge {
      torus {
        CURVE, LG_CORNER_SPACE
        rotate <0, 0, 90>
        translate <LG_CORNER_SPACE, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>
      }
      torus {
        CURVE, LG_CORNER_SPACE
        rotate <0, 0, 90>
        translate <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>
      }
    }
    box {
      <0, LG_CORNER_SPACE, LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
      <WIDTH*LG_BRICK_WIDTH, LENGTH*LG_BRICK_WIDTH-LG_CORNER_SPACE/2, HEIGHT*LG_PLATE_HEIGHT>
    }
  }
// TOP CURVE
  intersection {
    difference {
      union {
        cylinder {
          <LG_CORNER_SPACE, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
          <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
          CURVE+LG_CORNER_SPACE
        }
        cylinder {
          <0, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
          <WIDTH*LG_BRICK_WIDTH, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
          CURVE
        }
      }
      cylinder {
        <0, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
        <WIDTH*LG_BRICK_WIDTH, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
        CURVE-LG_WALL_WIDTH
      }
      cylinder {
        <0.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>,
        <0.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, LG_KNOB_HEIGHT_LOGO>,
        LG_KNOB_RADIUS
      }
      cylinder {
        <1.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>,
        <1.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, LG_KNOB_HEIGHT_LOGO>,
        LG_KNOB_RADIUS
      }
      cylinder {
        <2.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>,
        <2.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, LG_KNOB_HEIGHT_LOGO>,
        LG_KNOB_RADIUS
      }
      cylinder {
        <3.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>,
        <3.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, LG_KNOB_HEIGHT_LOGO>,
        LG_KNOB_RADIUS
      }
    }
    box {
      <LG_E, LG_CORNER_SPACE, 0>,
      <WIDTH*LG_BRICK_WIDTH-LG_E, LENGTH*LG_BRICK_WIDTH-LG_CORNER_SPACE+LG_E, LG_BRICK_HEIGHT>
    }
  }
// SIDE WALLS //
  intersection {
    union {
      difference {
        union {
          box {
            <LG_CORNER_SPACE, LG_CORNER_SPACE, 0>,
            <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, LENGTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, HEIGHT*LG_PLATE_HEIGHT>
          }
          box {
            <0, LG_CORNER_SPACE, LG_CORNER_SPACE>,
            <WIDTH*LG_BRICK_WIDTH, LENGTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
          }
          box {
            <LG_CORNER_SPACE, 0, LG_CORNER_SPACE>,
            <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, LENGTH*LG_BRICK_WIDTH, LG_BRICK_HEIGHT-LG_CORNER_SPACE>
          }
        }
        box {
          <LG_WALL_WIDTH, LG_WALL_WIDTH, -LG_CORNER_SPACE>,
          <WIDTH*LG_BRICK_WIDTH-LG_WALL_WIDTH, LENGTH*LG_BRICK_WIDTH-LG_WALL_WIDTH, LG_BRICK_INNER_HEIGHT>
        }
      }
    }
    cylinder {
      <5, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
      <-5, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
      CURVE
    }
  }
  box {
    <LG_CORNER_SPACE, LENGTH*LG_BRICK_WIDTH-LG_E, LG_CORNER_SPACE>,
    <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, LENGTH*LG_BRICK_WIDTH, LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>
  }
  translate <-WIDTH/2*LG_BRICK_WIDTH, -LENGTH/2*LG_BRICK_WIDTH, 0>
  rotate <0, 0, -90>
}

#declare lg_61068_clear = 
merge {
 // EDGES
 sphere {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, (HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE)>, LG_CORNER_SPACE
 }
 sphere {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE, (HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE)>, LG_CORNER_SPACE
 }
 cylinder {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE, (HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE)>,
  <LG_CORNER_SPACE, LG_CORNER_SPACE, (HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE)>,
  LG_CORNER_SPACE 
 }
 sphere {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>, LG_CORNER_SPACE
 }
 sphere {
  <(WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE), LG_CORNER_SPACE, LG_CORNER_SPACE>, LG_CORNER_SPACE
 }
 cylinder {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <(WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE), LG_CORNER_SPACE, LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  LG_CORNER_SPACE 
 }
 cylinder {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <LG_CORNER_SPACE, LG_CORNER_SPACE, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 sphere {
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>, LG_CORNER_SPACE
 }
 sphere {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>, LG_CORNER_SPACE
 }
 cylinder {
  <LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
cylinder {
  <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, LG_CORNER_SPACE, LG_CORNER_SPACE>,
  <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 sphere {
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>, LG_CORNER_SPACE
 }
 sphere {
  <(WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>, LG_CORNER_SPACE
 }
 cylinder {
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE 
 }
 cylinder {
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  <((WIDTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_CORNER_SPACE>,
  LG_CORNER_SPACE
 }
 cylinder {
  <LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, ((LENGTH*LG_BRICK_WIDTH)-LG_CORNER_SPACE), LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
  LG_CORNER_SPACE
 }
 intersection {
  merge {
   torus {
    CURVE, LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <LG_CORNER_SPACE, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>
   }
   torus {
    CURVE, LG_CORNER_SPACE
    rotate <0, 0, 90>
    translate <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>
   }
  }
  box {
   <0, LG_CORNER_SPACE, LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>,
   <WIDTH*LG_BRICK_WIDTH, LENGTH*LG_BRICK_WIDTH-LG_CORNER_SPACE/2, HEIGHT*LG_PLATE_HEIGHT>
  }
 }
 // TOP CURVE
 intersection {
  difference {
   union {
    cylinder {
     <LG_CORNER_SPACE, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
     <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
     CURVE+LG_CORNER_SPACE
    }
    cylinder {
     <0, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
     <WIDTH*LG_BRICK_WIDTH, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>,
     CURVE
    }
   }
   cylinder {
    <0, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>, <WIDTH*LG_BRICK_WIDTH, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>, CURVE-LG_WALL_WIDTH
   }
   cylinder {
    <0.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>, <0.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, LG_KNOB_HEIGHT_LOGO>, LG_KNOB_RADIUS
   }
   cylinder {
    <1.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>, <1.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, LG_KNOB_HEIGHT_LOGO>, LG_KNOB_RADIUS
   }
   cylinder {
    <2.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>, <2.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, LG_KNOB_HEIGHT_LOGO>, LG_KNOB_RADIUS
   }
   cylinder {
    <3.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, 0>, <3.5*LG_BRICK_WIDTH, 1.5*LG_BRICK_WIDTH, LG_KNOB_HEIGHT_LOGO>, LG_KNOB_RADIUS
   }
  }
  box {
   <LG_E, LG_CORNER_SPACE, 0>,
   <WIDTH*LG_BRICK_WIDTH-LG_E, LENGTH*LG_BRICK_WIDTH-LG_CORNER_SPACE+LG_E, LG_BRICK_HEIGHT>
  }
 }
 // SIDE WALLS
 intersection {
  union {
   difference {
    union {
     box {
      <LG_CORNER_SPACE, LG_CORNER_SPACE, 0>,
      <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, LENGTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, HEIGHT*LG_PLATE_HEIGHT>
     }
     box {
      <0, LG_CORNER_SPACE, LG_CORNER_SPACE>,
      <WIDTH*LG_BRICK_WIDTH, LENGTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE>
     }
     box {
     <LG_CORNER_SPACE, 0, LG_CORNER_SPACE>,
     <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, LENGTH*LG_BRICK_WIDTH, LG_BRICK_HEIGHT-LG_CORNER_SPACE>
     }
    }
    box {
     <LG_WALL_WIDTH, LG_WALL_WIDTH, -LG_CORNER_SPACE>,
     <WIDTH*LG_BRICK_WIDTH-LG_WALL_WIDTH, LENGTH*LG_BRICK_WIDTH-LG_WALL_WIDTH, LG_BRICK_INNER_HEIGHT>
    }
   }
  }
  cylinder {
   <5, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>, <-5, 0, HEIGHT*LG_PLATE_HEIGHT-LG_CORNER_SPACE-CURVE>, CURVE
  }
 }
 box {
  <LG_CORNER_SPACE, LENGTH*LG_BRICK_WIDTH-LG_E, LG_CORNER_SPACE>,
  <WIDTH*LG_BRICK_WIDTH-LG_CORNER_SPACE, LENGTH*LG_BRICK_WIDTH, LG_BRICK_HEIGHT-LG_CORNER_SPACE-2*LG_BRICK_WIDTH/cos(pi*lg_angle2/180)*sin(lg_angle2*pi/180)>
 }
 translate <-WIDTH/2*LG_BRICK_WIDTH, -LENGTH/2*LG_BRICK_WIDTH, 0>
 rotate <0, 0, -90>
}

#end
